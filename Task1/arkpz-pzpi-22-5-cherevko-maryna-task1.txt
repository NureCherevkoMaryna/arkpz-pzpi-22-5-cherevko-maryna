МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ

ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ

Кафедра «Програмна інженерія»




ЗВІТ
до лабораторної роботи №1 з дисципліни
«Аналіз та рефакторинг коду»
На тему: «Розробка Vision and Scope»





Виконала:									Перевірив:
ст. гр. ПЗПІ-22-5								Дашенков Д. С. 
Черевко Марина





              Харків 2024

Vision and Scope Document
for
Програмна система для контролю умов зберігання швидкопсувних продуктів

Version 1.0 approved
Prepared by Черевко Марина
Харківський Національний Університет Радіоелектроники
30.12.2024 
Table of Contents

Table of Contents	ii
Revision History	ii
1.	Business Requirements	1
1.1.	Background	1
1.2.	Business Opportunity	1
1.3.	Business Objectives and Success Criteria	1
1.4.	Customer or Market Needs	2
1.5.	Business Risks	2
2.	Vision of the Solution	3
2.1.	Vision Statement	3
2.2.	Major Features	3
2.3.	Assumptions and Dependencies	4
3.	Scope and Limitations	4
3.1.	Scope of Initial Release	4
3.2.	Scope of Subsequent Releases	5
3.3.	Limitations and Exclusions	5
4.	Business Context	5
4.1.	Stakeholder Profiles	6
4.2.	Project Priorities	6
4.3.	Operating Environment	7




Revision History


Name	Date	Reason For Changes	Version
Черевко Марина	30.12.2024	Початкова версія документа	1.0
			
 
1.	Business Requirements
1.1.	Background
Зберігання швидкопсувних продуктів є критично важливим для продовольчого сектора, логістики та роздрібної торгівлі. Невідповідність умов зберігання (наприклад, температури чи вологості) може призвести до псування товарів, фінансових втрат, а також ризику для здоров’я споживачів.

Сучасні підприємства часто стикаються з такими проблемами:
‒ низька ефективність ручного моніторингу умов зберігання;
‒ відсутність оперативного реагування на зміни параметрів;
‒ значні витрати на контроль і утилізацію зіпсованих продуктів.

Розробка автоматизованої системи для моніторингу умов зберігання дозволяє забезпечити стабільність якості продуктів, мінімізувати ризики втрат і покращити загальну ефективність процесів.

1.2.	Business Opportunity
На ринку вже існують системи моніторингу умов зберігання, але вони мають певні обмеження:
‒ спеціалізовані системи IoT орієнтовані лише на великі підприємства, мають високу вартість впровадження;
‒ локальні рішення часто не підтримують хмарне зберігання даних і не інтегруються з мобільними пристроями;
‒ ручний моніторинг залишається найбільш розповсюдженим, але малоефективним способом.

Переваги запропонованої системи:
‒ інтеграція з IoT-пристроями для збору даних у реальному часі;
‒ можливість роботи з веб- та мобільними клієнтами;
‒ простота впровадження та масштабування для бізнесів будь-якого розміру.

1.3.	Business Objectives and Success Criteria
Монетизація проєкту можлива через наступні механізми:
‒ щомісячна або щорічна підписка, оплата за використання системи;
‒ продаж IoT-пристроїв як базовий комплект для моніторингу;
‒ ліцензії для великих підприємств, впровадження кастомізованих рішень;
‒ аналітичні послуги: продаж аналітичних звітів і прогнозів на основі зібраних даних.

Орієнтація на широкий ринок (роздрібні мережі, склади, логістичні компанії) забезпечує перспективність проєкту. Унікальність рішення дозволяє зайняти нішу серед доступних та інноваційних продуктів для малих і середніх підприємств.

1.4.	Customer or Market Needs
Система для контролю умов зберігання швидкопсувних продуктів вирішує кілька ключових проблем, з якими стикаються клієнти у різних сегментах ринку, зокрема:
• Основні потреби клієнтів:
‒	автоматизований моніторинг температури та вологості у місцях зберігання;
‒	сповіщення про критичні зміни показників для оперативного реагування;
‒	збереження історії даних для аналізу умов зберігання;

• Незадоволені потреби ринку:
‒	бюджетні рішення для малих і середніх підприємств;
‒	простий у використанні інтерфейс для віддаленого моніторингу;
‒	інтеграція з мобільними додатками для зручності користувачів;

• Середовища використання:
‒	апаратура: IoT-пристрої (датчики температури та вологості);
‒	програмне забезпечення: веб-додатки для моніторингу в реальному часі, мобільні додатки для сповіщень;
‒	інтеграція: підтримка роботи через хмарні сервіси, API для взаємодії з іншими системами;

• Вимоги до інтерфейсів та продуктивності:
‒	висока точність даних із сенсорів (похибка не більше 2%);
‒	швидкість передачі даних від IoT-пристроїв на сервер;
‒	надійний захист даних користувачів.

Ринок орієнтований на компанії, які працюють у сфері продовольства, логістики, фармацевтики та охорони здоров’я, де якість зберігання є критично важливою.

1.5.	Business Risks
У процесі розробки та впровадження проєкту можливі наступні бізнес-ризики:
• Конкуренція:
‒	висока конкуренція серед постачальників подібних рішень може ускладнити вихід на ринок;
‒	стратегія зменшення ризику: використання конкурентної ціни та зручного інтерфейсу для залучення малих і середніх підприємств;

• Проблеми впровадження IoT-пристроїв:
‒	можливі складнощі з налаштуванням або підключенням датчиків у клієнтів;
‒	стратегія зменшення ризику: надання детальної документації та технічної підтримки;

• Прийняття користувачами:
‒	недовіра до автоматизованих систем моніторингу або недостатнє розуміння переваг продукту;
‒	стратегія зменшення ризику: проведення освітніх кампаній та демонстрація економії витрат;

• Фінансові ризики:
‒	високі витрати на розробку та маркетинг можуть вплинути на прибутковість проєкту;
‒	стратегія зменшення ризику: впровадження мінімально життєздатного продукту (MVP) для швидкого тестування ринку;
• Технічні ризики:
‒	можливі затримки у роботі серверів або збої в передачі даних;
‒	стратегія зменшення ризику: використання хмарних сервісів із високою доступністю.

Розробка цього проєкту передбачає значний потенціал успіху, якщо врахувати всі можливі ризики та впровадити стратегії для їх мінімізації.

2.	Vision of the Solution
Цей розділ окреслює довгострокове бачення системи, визначає її унікальні особливості та залежності, необхідні для успішної реалізації проєкту.
2.1.	Vision Statement
Програмна система для контролю умов зберігання швидкопсувних продуктів призначена для автоматизації моніторингу та управління умовами зберігання у продовольчих складах, магазинах, логістичних центрах і підприємствах харчової промисловості.
Система забезпечує точний збір даних у реальному часі з датчиків, автоматичний аналіз показників та оперативне інформування користувачів про відхилення від заданих норм. Це дозволяє уникати втрат через псування продуктів, знижує витрати на ручний контроль і сприяє оптимізації процесів зберігання.
Реалізація цієї системи сприятиме підвищенню ефективності роботи підприємств та збереженню якості продуктів харчування, створюючи конкурентну перевагу для користувачів.

2.2.	Major Features
• Моніторинг показників температури та вологості у реальному часі з використанням IoT-пристроїв.
• Автоматичне сповіщення про перевищення критичних показників через push-сповіщення, SMS або email.
• Збереження історії змін умов зберігання для подальшого аналізу та створення звітів.
• Інтеграція з мобільними та веб-клієнтами для віддаленого доступу до даних.
• Налаштування користувачем параметрів контролю та порогових значень для кожного об’єкта зберігання.
• Масштабованість системи для роботи з декількома об’єктами одночасно.
• Безпечне зберігання даних відповідно до стандартів захисту інформації.


2.3.	Assumptions and Dependencies
• Передбачається, що IoT-пристрої (датчики температури та вологості) будуть підключені до мережі Wi-Fi для передачі даних.
• Користувачі системи матимуть доступ до мобільного або веб-додатку для моніторингу.
• Для забезпечення надійної роботи системи буде використовуватися хмарна інфраструктура, для зберігання даних.
• Система залежить від стабільної роботи мережі передачі даних та регулярного обслуговування IoT-пристроїв.
• Передбачається інтеграція системи зі сторонніми сервісами для надсилання сповіщень.
• Ефективна робота системи залежить від коректного налаштування порогових значень користувачами для кожного об’єкта зберігання.

3.	Scope and Limitations
Цей розділ встановлює чіткі рамки проєкту, дозволяючи уникнути завищених очікувань з боку зацікавлених сторін та забезпечити успішну реалізацію первинної версії.

3.1.	Scope of Initial Release
Перший випуск програмної системи включатиме такі ключові функції:
• Моніторинг умов зберігання в реальному часі:
‒	збір даних із датчиків температури та вологості;
‒	передача даних на сервер для аналізу та збереження;

• Автоматичні сповіщення:
‒	інформування користувачів про перевищення критичних значень через push-сповіщення, SMS або email;

• Інтерфейс користувача:
‒	веб-додаток для перегляду поточних показників, історії даних та налаштування параметрів;

• Захист персональних даних:
‒	використання стандартів безпеки для зберігання та передачі даних (наприклад, шифрування);

• Масштабованість:
‒	підтримка роботи з декількома об’єктами зберігання одночасно.

Ці функції забезпечать базовий функціонал для моніторингу умов зберігання та дозволять користувачам отримувати важливу інформацію вчасно.

3.2.	Scope of Subsequent Releases
Наступні версії системи планується доповнити такими можливостями:
• Розширені аналітичні функції:
‒	побудова графіків і звітів для аналізу довгострокових змін умов зберігання;
‒	інтеграція прогнозних моделей для запобігання можливим проблемам;

• Мобільний додаток:
‒	повна підтримка функціоналу для моніторингу, налаштування та отримання сповіщень через смартфони;

• Інтеграція зі сторонніми системами:
‒	API для підключення до інших програм, наприклад, систем логістики або управління складом.

• Додаткові IoT-пристрої:
‒	підтримка нових сенсорів (наприклад, для моніторингу CO₂, рівня світла).

Ці функції розширять можливості системи, зроблять її більш універсальною та адаптованою до потреб різних бізнесів.

3.3.	Limitations and Exclusions
• Обмеження початкової версії:
‒	підтримка лише стандартних IoT-сенсорів температури та вологості;
‒	відсутність функціоналу для роботи офлайн.
• Винятки:
‒	система не забезпечує фізичну автоматизацію управління умовами зберігання (наприклад, автоматичне охолодження);
‒	не включає підтримку нестандартного обладнання або сенсорів без попередньої адаптації.





4.	Business Context
Цей розділ допомагає чітко окреслити зацікавлені сторони, пріоритети проєкту та середовище, в якому система функціонуватиме.







4.1.	Stakeholder Profiles

Зацікавлена сторона	
Основна цінність	
Ставлення	
Основні інтереси	
Обмеження
Власники бізнесу
	Збільшення доходів, зменшення втрат
	Високий інтерес до впровадження
	Підвищення ефективності моніторингу та зниження витрат
	Максимальний бюджет для проєкту — $1.5 млн

Оператори складів
	Полегшення роботи, автоматизація процесів
	Сприятливе, за умови високої надійності
	Інтуїтивно зрозумілий інтерфейс, швидке сповіщення про критичні зміни
	Низький рівень комп’ютерної грамотності
Кінцеві клієнти
	Покращення якості продуктів
	Нейтральне, очікують стабільного результату
	Забезпечення умов, які гарантують свіжість продукції
	Немає доступу до внутрішньої системи
Розробники системи
	Зростання портфоліо проектів
	Зацікавлені у якісній реалізації
	Чітке технічне завдання, сучасні технології
	Обмеження строків та бюджету

4.2.	Project Priorities
Параметр	Ключовий драйвер
	Обмеження	Ступінь свободи
Графік
	Перший реліз — через 6 місяців	Затримка не більше 1 місяця
	Гнучке планування функцій
Функції
	80% функцій реалізовано в першій версії	Реалізація лише ключових функцій	Вторинні функції переносяться в наступні релізи

Якість
	Тестування всіх основних модулів	90% успішних тестів перед релізом	Дозволяється 10% нерозв'язаних дрібних помилок

Команда
	Максимальна команда — 5 розробників	Немає можливості розширення команди	Розробка має бути максимально ефективною

Бюджет
	В межах $1.5 млн	Перевищення не більше ніж на 10%	Ефективне використання ресурсів


4.3.	Operating Environment
Система буде використовуватися у складських приміщеннях, супермаркетах, логістичних центрах та інших об'єктах зберігання швидкопсувних продуктів.
•	Технології та програмні засоби:
‒	IoT-пристрої: ESP32, датчики DHT22 (для температури та вологості);
‒	сервер: Ngrok для створення тунелів і тестування API;
‒	база даних: Microsoft SQL Server для зберігання історичних даних та конфігурацій;
‒	фреймворки: 
o	Backend: Node.js з використанням Express.js для обробки запитів;
o	Frontend: React для створення веб-інтерфейсу;
‒	програмні бібліотеки: 
o	Express.js (управління маршрутизацією та middleware);
o	Axios (для клієнт-серверної комунікації);
‒	мови програмування: JavaScript (як для бекенду, так і для фронтенду).

•	Вимоги до доступності та надійності:
‒	99.9% часу роботи серверів;
‒	затримка передачі даних від IoT-пристроїв до сервера не більше 5 секунд;
‒	шифрування всіх переданих даних;

•	Інші характеристики:
‒	географічна розподіленість користувачів (склади можуть бути в різних регіонах);
‒	безперервний доступ до системи важливий для уникнення втрат.


